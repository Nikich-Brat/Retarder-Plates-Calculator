unit PhasePlates;

interface

uses
Windows,Graphics, Messages, SysUtils, Variants, Classes, Dialogs, ExtCtrls, Math, Menus,PolarizationRotationAndPhasePlateCalc,Calculations;

function VisualizeCoordinateCircle(img:TImage;radius:integer;Color:TColor;angle:double):boolean;
function VisualizePolarizationCoordinateAxis(img:TImage;radius:integer;Color:TColor):boolean;

implementation

function VisualizeCoordinateCircle(img:TImage;radius:integer;Color:TColor;angle:double):boolean;
var i:integer;
begin
  result:=false;
  img.Picture:=nil;//to refresh an image
  img.Canvas.Ellipse(0, 0, radius*2, radius*2);
  img.Canvas.Pen.Color:= Color;
  for i:=0 to 359 do begin
    if (i=135) or (i=45) or (i=0) or (i=90) or (i=180) or (i=225) or (i=270) or (i=315) then begin
      img.Canvas.MoveTo(Trunc(radius+radius*cos(Pi*i/180 - Pi/2 + angle)),Trunc(radius+radius*sin(Pi*i/180 - Pi/2+ angle)));
      img.Canvas.LineTo(Trunc(radius+radius*0.9*cos(Pi*i/180 - Pi/2+ angle)),Trunc(160+radius*0.9*sin(Pi*i/180 - Pi/2+ angle)));
      img.Canvas.TextOut(Trunc(radius+radius*0.8*cos(Pi*i/180 - Pi/2+ angle)),Trunc(160+radius*0.8*sin(Pi*i/180 - Pi/2+ angle)),FloatToStr(i));
    end else begin
      img.Canvas.MoveTo(Trunc(radius+radius*cos(Pi*i/180 - Pi/2 + angle)),Trunc(radius+radius*sin(Pi*i/180 - Pi/2 + angle)));
      img.Canvas.LineTo(Trunc(radius+radius*0.95*cos(Pi*i/180 - Pi/2 + angle)),Trunc(radius+radius*0.95*sin(Pi*i/180 - Pi/2 + angle)));
    end;
  end;
  result:=true;
end;

function VisualizePolarizationCoordinateAxis(img:TImage;radius:integer;Color:TColor):boolean;
var i:integer;
begin
  result:=false;
  img.Canvas.Pen.Color:= Color;
  for i:=0 to radius*2 do begin
    if i mod 2 = 0 then
      img.Canvas.MoveTo(Trunc(i),Trunc(radius))
    else
      img.Canvas.LineTo(Trunc(i),Trunc(radius));
  end;
  for i:=0 to radius*2 do begin
    if i mod 2 = 0 then
      img.Canvas.MoveTo(Trunc(radius),Trunc(i))
    else
      img.Canvas.LineTo(Trunc(radius),Trunc(i));
  end;
  img.Canvas.Pen.Color:= clBlack;
  result:=true;
end;



end.
